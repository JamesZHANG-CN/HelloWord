<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on TheNorthMemory</title>
    <link>/categories/php/</link>
    <description>Recent content in php on TheNorthMemory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh_CN</language>
    <lastBuildDate>Thu, 01 Jul 2021 19:19:11 +0800</lastBuildDate>
    
	<atom:link href="/categories/php/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>微信支付PHP开发对接18讲——03: Crypto\AesInterface AES抽象接口</title>
      <link>/post/18-points-of-the-wechatpay-php-openapi-sdk-section03/</link>
      <pubDate>Thu, 01 Jul 2021 19:19:11 +0800</pubDate>
      
      <guid>/post/18-points-of-the-wechatpay-php-openapi-sdk-section03/</guid>
      <description>&lt;code&gt;AES&lt;/code&gt; 加解密的块大小，固定是16字节的，提供加密算法常量 &lt;code&gt;ALGO_AES_256_GCM&lt;/code&gt; 及 &lt;code&gt;ALGO_AES_256_ECB&lt;/code&gt;，从字面量上给&lt;code&gt;类实现&lt;/code&gt;提供了可以直接使用的公共加/解密算法。另外3点：1. &lt;code&gt;PHP7&lt;/code&gt; 可以在接口文件中定义公共类常量; 2. 阐述高等级加密&lt;code&gt;AES&lt;/code&gt;的两个基础知识点; 3. 抽象公共加/解密函数接口，引述程序设计中的&lt;code&gt;协变&lt;/code&gt;设计规则;</description>
    </item>
    
    <item>
      <title>微信支付PHP开发对接18讲——02: RSA-OAEP非对称加解密重构</title>
      <link>/post/18-points-of-the-wechatpay-php-openapi-sdk-section02/</link>
      <pubDate>Tue, 29 Jun 2021 14:50:11 +0800</pubDate>
      
      <guid>/post/18-points-of-the-wechatpay-php-openapi-sdk-section02/</guid>
      <description>有开发者反馈，先前的加解密&lt;code&gt;Util\SensitiveInfoCrypto&lt;/code&gt;实现，用法看似简单，其实用起来&amp;rsquo;坑&amp;rsquo;蛮多的。&amp;rsquo;坑&amp;rsquo;点在于：初始化所需的&lt;code&gt;私钥&lt;/code&gt;和&lt;code&gt;公钥(证书)&lt;/code&gt;，在业务场景下是&lt;code&gt;非配对&lt;/code&gt;的！&lt;code&gt;公钥(证书)&lt;/code&gt;加密时，所用的&lt;code&gt;公钥(证书)&lt;/code&gt;是&lt;code&gt;平台证书(公钥)&lt;/code&gt;，而解密时所需的&lt;code&gt;私钥&lt;/code&gt;，是&lt;code&gt;商户私钥&lt;/code&gt;。并且，加解密稍不注意就会干扰到业务处理(初始化参数以及切换&lt;code&gt;stage&lt;/code&gt;稍微繁琐)。遂重构一遍，命名为 &lt;code&gt;Crypto\Rsa&lt;/code&gt; 类。</description>
    </item>
    
    <item>
      <title>微信支付PHP开发对接18讲——01: Formatter 从格式化参数说起</title>
      <link>/post/18-points-of-the-wechatpay-php-openapi-sdk-section01/</link>
      <pubDate>Sun, 27 Jun 2021 17:00:11 +0800</pubDate>
      
      <guid>/post/18-points-of-the-wechatpay-php-openapi-sdk-section01/</guid>
      <description>SDK目标是优先&lt;code&gt;APIv3&lt;/code&gt;版，当然也需要考虑当下，&lt;code&gt;APIv2&lt;/code&gt;还在并行运行。两者之间有共性也有特性，把共性部分抽象出来，当属&lt;code&gt;格式化&lt;/code&gt;参数部分。&lt;code&gt;随机字符串&lt;/code&gt;首当其冲，那就从这个函数实现开始吧。</description>
    </item>
    
    <item>
      <title>微信支付PHP开发对接18讲——从起步到跑顺路</title>
      <link>/post/18-points-of-the-wechatpay-php-openapi-sdk-catelog/</link>
      <pubDate>Sun, 27 Jun 2021 16:00:11 +0800</pubDate>
      
      <guid>/post/18-points-of-the-wechatpay-php-openapi-sdk-catelog/</guid>
      <description>用时18天，18个文件，2021年6月18日正式发布，带你了解一下「可链式调用的微信支付PHPSDK」研发细节。</description>
    </item>
    
    <item>
      <title>香港及海外接入点，如何使用wechatpay-php支付开发包概览</title>
      <link>/post/howto-use-the-wechatpay-php-library-of-china-offshore/</link>
      <pubDate>Fri, 25 Jun 2021 11:49:15 +0800</pubDate>
      
      <guid>/post/howto-use-the-wechatpay-php-library-of-china-offshore/</guid>
      <description>简述非中国大陆区使用 wechatpay/wechatpay 开发包的step1.2.3.</description>
    </item>
    
    <item>
      <title>可链式调用微信支付OpenAPI的PHP版SDK</title>
      <link>/post/async-sync-chainable-wechatpay-v2-and-v3-openapi-sdk-for-php/</link>
      <pubDate>Thu, 17 Jun 2021 19:26:11 +0800</pubDate>
      
      <guid>/post/async-sync-chainable-wechatpay-v2-and-v3-openapi-sdk-for-php/</guid>
      <description>一款 PHPStan Level8 最严谨级别，用起来会觉得原来程序还可以这么自由编写的微信支付SDK——[A]Sync Chainable WeChatPay v2&amp;amp;v3&amp;rsquo;s OpenAPI SDK for PHP</description>
    </item>
    
  </channel>
</rss>